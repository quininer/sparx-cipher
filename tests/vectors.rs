extern crate sparx_cipher;

use sparx_cipher::Sparx;


#[test]
fn test_vector() {
    let key = [0x11, 0x00, 0x33, 0x22, 0x55, 0x44, 0x77, 0x66, 0x99, 0x88, 0xbb, 0xaa, 0xdd, 0xcc, 0xff, 0xee];
    let plaintext = [0x23, 0x01, 0x67, 0x45, 0xab, 0x89, 0xef, 0xcd];
    let ciphertext = [0xbe, 0x2b, 0x52, 0xf1, 0xf5, 0x01, 0x98, 0x5f];

    let mut block = plaintext.clone();
    let cipher = Sparx::new(&key);
    cipher.encrypt(&mut block);
    assert_eq!(ciphertext, block);
    cipher.decrypt(&mut block);
    assert_eq!(plaintext, block);
}
